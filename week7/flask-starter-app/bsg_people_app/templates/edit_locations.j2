<html>

<head>
	<title>Edit Locations</title>
	<link href="style.css" rel="stylesheet" type="text/css" />
</head>

	<a href="machines">Machines</a> 
	<a href="locations">Locations</a>
	<a href="products">Products</a>
	<a href="mechanics">Mechanics</a>
	<a href="workorders">Work Orders</a>
	
	<p>&nbsp;</p>

<body>
    <div>
        <table border="1" cellpadding="5"> 
            <caption> Editing Location: </caption>
            <!-- Access data tuple passed from app.py -->
            {% if data %}
                <thead>
                    <tr>
                        <!-- Iterate through each key in the first entry to get the column name -->
                        {% for key in data[0].keys() %}

                        <!-- Create a <th> tag with the key inside of it, this will be our header row -->
                        <th scope="col" data-field="{{ key }}" data-filter-control="input">{{ key }}</th>
                        
                        <!-- End of this for loop -->
                        {% endfor %} 
                    </tr>

                <tbody>
                    <!-- Now, iterate through every item in data -->
                    {% for item in data %}
                    <tr>
                        <!-- Then iterate through every key in the current item dictionary -->
                        {% for key in item.keys() %}
                        
                        <!-- Create a <td> element with the value of that key in it -->
                        <td>{{item[key]}}</td> {% endfor %} 
                    </tr> 
                    {% endfor %} 
            {% endif %} 
        </table>

        <div id="edit">
            <!-- form to edit data in Machines-->
            <form id="editLocation" action="/edit_locations/{{data[0].locationId}}" method="post">
                <legend><strong>Edit Machine</strong></legend>
                <fieldset>
                    <!-- We can preset form inputs to match attributes currently stored for 'id' of person to be updated via value= and accessing our passed data tuple -->
                    <!-- Create hidden form input to store the passed 'id' of the person we are editing so we can access it easily in our 'POST' method in our app.py -->
                    <input type="hidden" value="{{data[0].locationId}}" class="form-control" id="locationId" name="locationId" required>
                    
                    <label for="locationName">Name:</label>
                    <input type="text" value="{{data[0].locationName}}" class="form-control" id="locationName" name="locationName" required>      

                    <label for="address">Address:</label>
                    <input type="text" value="{{data[0].address}}" class="form-control" id="address" name="address" required>	

                    <label for="zipcode">Zipcode:</label>
                    <input type="text" value="{{data[0].zipcode}}" class="form-control" id="zipcode" name="zipcode" required>
                        
                    <label for="state">State:</label>
                    <input type="text" value ="{{data[0].state}}" class="form-control" id="state" name="state" required>

                    <label for="isClientLocation">Is a client location? (0 = No, 1 = yes):</label>
				    <input type="number" class="form-control" id="isClientLocation" name="isClientLocation" min="0" max="1" step="1" required>           
                </fieldset>
                <input type="submit" value="Edit Location" name="Edit_Location" class="btn btn-primary" style="margin:.5rem;">
                <a href='/locations'><input class="btn" type="button" value="cancel"></a>
            </form>
	<footer>
	<p> Project Step 4 Draft Version: Implement CRUD for One Entity</p>
		<p>[Juan Pablo Duque and Marco Scandroglio]</p>
	<!--Code Citation:-->
	<!--Date: 02/24/2023-->
	<!--Code adapted from Exploration 7 Course Content (Flask Starter App):--> 
	<!--Source URL: https://github.com/osu-cs340-ecampus/flask-starter-app-->
	</footer>
</body>
</html>
